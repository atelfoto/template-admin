{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
    public function index()
    {
        $key = $this->request->getQuery('key');
        if ($key) {
            $query = $this->{{ currentModelName }}->find('all')
{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% if belongsTo %}
            ->contain([{{ Bake.stringifyList(belongsTo, {'indent': false})|raw }}])
{% endif %}
            ->where(
                [
                    'Or' => [
                        '{{ currentModelName }}.name like' => '%' . $key . '%' 
                    ]
                ]
            );
        } else {
            $query = $this->{{ currentModelName }};
        }
        ${{ pluralName }} = $this->paginate(
            $query,
            [
{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
{% if belongsTo %}
                'contain' => [{{ Bake.stringifyList(belongsTo, {'indent': false})|raw }}],
{% endif %}
                'limit' => 10
            ]
        );
        $this->set(compact('{{ pluralName }}'));
    }

